grammar Crisp

  rule block
    (operation)* <Block>
  end

  rule operation
    space paren_start space func_identifier element_list:(space element)* space paren_end space <Operation>
  end

  rule array
    array_paren_start element_list:(space element)* space array_paren_end <ArrayLiteral>
  end

  rule element
    true / false / nil / operation / float / number / symbol / string / array
  end

  rule func_identifier
    symbol
    /
    [/=*<>\-+]
  end

  rule true
    'true' <True>
  end

  rule false
    'false' <False>
  end

  rule nil
    'nil' <Nil>
  end

  rule symbol
    [a-z] [a-z0-9]* <Symbol>
  end

  rule number
    '-'? ([1-9] [0-9]* / '0') <Number>
  end

  rule float
    number '.' [0-9]* <Float>
  end

  rule string
    '"' [^"]* '"' <StringLiteral>
  end

  rule space
    [ \t\r\n]*
  end

  rule paren_start
    "("
  end

  rule paren_end
    ")"
  end

  rule array_paren_start
    "["
  end

  rule array_paren_end
    "]"
  end

end
