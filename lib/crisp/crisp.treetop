grammar Crisp

  rule block
    operation operations:(space operation)* <Block>
  end

  rule operation
    space paren_start space func_identifier list:(space parameter)+ space paren_end space <Operation>
  end

  rule parameter
    operation / float / number / symbol / string
  end

  rule func_identifier
    [a-z]+
    /
    '+'
    /
    '-'
    /
    '*'
    /
    '/'
  end

  rule symbol
    [a-z]+ <Symbol>
  end

  rule number
    '-'? ([1-9] [0-9]* / '0') <Number>
  end

  rule float
    number '.' [0-9]* <Float>
  end

  rule string
    '"' [a-z]* '"' <StringLiteral>
  end

  rule space
    [ \t\r\n]*
  end

  rule paren_start
    "("
  end

  rule paren_end
    ")"
  end

end
